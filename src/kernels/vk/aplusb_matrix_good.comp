#version 450

#include <libgpu/vulkan/vk/common.vk>

#include "../defines.h"

layout (std430, binding = 0) readonly	buffer AsIn		{	uint as[];	};
layout (std430, binding = 1) readonly	buffer BsIn		{	uint bs[];	};
layout (std430, binding = 2) writeonly	buffer CsOut	{	uint cs[];	};

layout (push_constant) uniform PushConstants {
	uint width;
    uint height;
} params;

layout (local_size_x = GROUP_SIZE, local_size_y = 1) in;
void main()
{
	const uint i = gl_GlobalInvocationID.x;
    const uint j = gl_GlobalInvocationID.y;

    if (i >= params.width || j >= params.height)
        return;

    cs[j * params.width + i] = as[j * params.width + i] + bs[j * params.width + i];
}
